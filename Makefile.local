## these settings are machine and *nix distribution dependent
# CPUS is the number of cores used during compiliation
CPUS              = 32
## suffix for the Boost C++ libraries, i.e. "-gcc41-mt-s-1_39"
SBL               = 
BOOST_LIBVER      = 1_63_0

## Older boost version 1.43.0, required for reading provided binary data files
## patched to prevent compiler errors due to system definition of TIME_UTC
## may have problems with newer compilers
## on my system (i7-2600, FC18, gcc 4.7.2) it thought that it didn't have pthreads unless I added -D_GLIBCXX__PTHREADS to CPPFLAGS below
#BOOST_LIBVER      = 1_43_0p
# Version 1.54 and 1.63 are tested -- by Yu

## additional header and libraries directories
INCLUDEDIRS       = -I ../libhashutil5 -I ../boost_$(BOOST_LIBVER) -I /usr/include/gtkmm-3.0/gtkmm 
LIBDIRS           = -L ../libhashutil5 -L ../boost_$(BOOST_LIBVER)/stage/lib 
CPP               = g++ -pthread $(INCLUDEDIRS) $(LIBDIRS)
CPPFLAGS          = -march=native -O2 -pthread  -std=c++11 -Wcpp -Wno-deprecated
CPPFLAGSD         = -ggdb

## CELL defines, uncomment these lines to build for the CELL platform (i.e. the PlayStation 3)
#CELLINCLUDEDIRS  = -I /var/ps3/usr/include
#CELLLIBDIRS      = -L /var/ps3/usr/lib64
#CPP               = powerpc64-unknown-linux-gnu-g++ -static -pthread $(INCLUDEDIRS) $(LIBDIRS) $(CELLINCLUDEDIRS) $(CELLLIBDIRS)
#CPPFLAGS          = -mcpu=powerpc64 -maltivec -m64 -O3 -DUSE_CELL
## do not change the cell suffix
#CELLSUFFIX        = _cell

## CUDA defines, uncomment these lines to enable CUDA builds
## Start from CUDA 5.0, we need the CUDA sample dir for compile
## CUDA 7.5 is tested -- by Yu
CUDA_TK           = /usr/local/cuda-7.5
CUDA_SDK          = /home/yu/NVIDIA_CUDA-7.5_Samples
CUDA_CPP          = $(CUDA_TK)/bin/nvcc
CUDA_SAMPLE_DIR   = /home/yu/NVIDIA_CUDA-7.5_Samples/common
CUDA_EXT_INC      = -I $(CUDA_SAMPLE_DIR)/inc -I $(CUDA_TK)/include
CUDA_EXT_LIB      = -L $(CUDA_SAMPLE_DIR)/lib -L $(CUDA_TK)/lib64
### CUDA TK 3.0 w/ gcc 4.4.0+ doesn't work without the -D__builtin_stdarg_start=__builtin_va_start
### also comment out the conflicting 3 lines in $(CUDA_TK)/include/math_functions.h
CUDA_FIX	  = -Xcompiler -D__builtin_stdarg_start=__builtin_va_start 
CUDA_CPPFLAGS     = -O2 $(INCLUDEDIRS) $(CUDA_EXT_INC) $(LIBDIRS) $(CUDA_EXT_LIB)
CUDA_CPPFLAGS_20  = $(CUDA_CPPFLAGS) -gencode=arch=compute_20,code=\"sm_20,compute_20\"
CUDA_LINKFLAGS    = -fPIC -L $(CUDA_TK)/lib64 -L $(CUDA_SDK)/lib -L $(CUDA_SDK)/common/lib/linux -L $(CUDA_SDK)/shared/lib -lcudart $(LIBRARIES)
